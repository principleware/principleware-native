{"version":3,"file":"principleware-native.js","sources":["../node_modules/principleware-fe-utilities/out-tsc/lib/src/promise/inter-op.ts","../node_modules/principleware-fe-utilities/out-tsc/lib/src/promise/promise-like.ts","../node_modules/principleware-fe-utilities/out-tsc/lib/src/typing/type-checker.ts","../node_modules/principleware-fe-utilities/out-tsc/lib/src/promise/monadic-operations.ts","../node_modules/principleware-fe-utilities/out-tsc/lib/src/tools/arr.ts","../node_modules/principleware-fe-utilities/out-tsc/lib/src/tools/math.ts","../node_modules/principleware-fe-utilities/out-tsc/lib/src/tools/str.ts","../node_modules/principleware-fe-utilities/out-tsc/lib/src/tools/url.ts","../node_modules/principleware-fe-utilities/out-tsc/lib/src/typing/type-cast.ts","../node_modules/principleware-fe-utilities/out-tsc/lib/principleware-fe-utilities.ts","../out-tsc/lib/src/storage/sqlite-database.ts","../out-tsc/lib/src/storage/map-table.ts","../out-tsc/lib/principleware-native.ts"],"sourcesContent":["\n/**\n * Extends a given promise into a deferred object of jQuery.\n * With this extension, we are able to chain together jQuery deferred\n * objects (which are also promise objects.)\n * @param {?} promise\n * @return {?}\n */\nexport function tojQueryDeferred(promise) {\n    if (!promise.always) {\n        promise.always = function(onFulfilled) {\n            return this.then(onFulfilled, onFulfilled);\n        };\n    }\n    if (!promise.done) {\n        promise.done = function(onFulfilled) {\n            return this.then(onFulfilled);\n        };\n    }\n    if (!promise.fail) {\n        promise.fail = function(onRejected) {\n            return this.then(null, onRejected);\n        };\n    }\n    if (!promise.progress) {\n        promise.progress = function() {\n            return this;\n        };\n    }\n    if (!promise.promise) {\n        promise.promise = function() {\n            return this;\n        };\n    }\n    return promise;\n}\n","\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction asap(fn) {\n    setTimeout(fn, 1);\n}\n/**\n * @param {?} fn\n * @param {?} thisArg\n * @return {?}\n */\nfunction bind(fn, thisArg) {\n    return function() {\n        fn.apply(thisArg, arguments);\n    };\n}\n\nvar /** @type {?} */ isArray = Array.isArray || function(value) { return Object.prototype.toString.call(value) === \"[object Array]\"; };\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n * \n * Makes no guarantees about asynchrony.\n * @param {?} fn\n * @param {?} onFulfilled\n * @param {?} onRejected\n * @return {?}\n */\nfunction doResolve(fn, onFulfilled, onRejected) {\n    var /** @type {?} */ done = false;\n    try {\n        fn(function(value) {\n            if (done) {\n                return;\n            }\n            done = true;\n            onFulfilled(value);\n        }, function(reason) {\n            if (done) {\n                return;\n            }\n            done = true;\n            onRejected(reason);\n        });\n    } catch ( /** @type {?} */ex) {\n        if (done) {\n            return;\n        }\n        done = true;\n        onRejected(ex);\n    }\n}\n/**\n * @param {?} deferred\n * @return {?}\n */\nfunction handle(deferred) {\n    var /** @type {?} */ me = this;\n    if (this._state === null) {\n        this._deferreds.push(deferred);\n        return;\n    }\n    asap(function() {\n        var /** @type {?} */ cb, /** @type {?} */ ret;\n        cb = me._state ? deferred.onFulfilled : deferred.onRejected;\n        if (cb === null) {\n            (me._state ? deferred.resolve : deferred.reject)(me._value);\n            return;\n        }\n        try {\n            ret = cb(me._value);\n        }\n        catch ( /** @type {?} */e) {\n            deferred.reject(e);\n            return;\n        }\n        deferred.resolve(ret);\n    });\n}\n/**\n * @return {?}\n */\nfunction finale() {\n    var /** @type {?} */ i, /** @type {?} */ len;\n    /*jslint plusplus:true */\n    for (i = 0, len = this._deferreds.length; i < len; i++) {\n        handle.call(this, this._deferreds[i]);\n    }\n    this._deferreds = null;\n}\n/**\n * @param {?} newValue\n * @return {?}\n */\nfunction reject(newValue) {\n    this._state = false;\n    this._value = newValue;\n    finale.call(this);\n}\n/**\n * @param {?} newValue\n * @return {?}\n */\nfunction resolve(newValue) {\n    try { //Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n        if (newValue === this) {\n            throw new TypeError('A promise cannot be resolved with itself.');\n        }\n        if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n            var /** @type {?} */ then = newValue.then;\n            if (typeof then === 'function') {\n                doResolve(bind(then, newValue), bind(resolve, this), bind(reject, this));\n                return;\n            }\n        }\n        this._state = true;\n        this._value = newValue;\n        finale.call(this);\n    } catch ( /** @type {?} */e) { reject.call(this, e); }\n}\n/**\n * Defines a dummy promise, which simulates the behavior of a normal Promise\n * but is suitable used in synchronous call.\n * This resulted object is also a jQuery deferred object, therefore,\n * it will be resolved by the jQuery deferred object if it is a resolved value in\n * the jQuery deferred object.\n * @template T\n * @param {?} fn\n * @return {?}\n */\nexport function DummyPromise<T>(fn: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?) => void) => void) {\n    if (typeof this !== 'object') {\n        throw new TypeError('Promises must be constructed via new');\n    }\n    if (typeof fn !== 'function') {\n        throw new TypeError('not a function');\n    }\n    this._state = null;\n    this._value = null;\n    this._deferreds = [];\n\n    doResolve(fn, bind(resolve, this), bind(reject, this));\n}\n/**\n * @param {?} onFulfilled\n * @param {?} onRejected\n * @param {?} resolve\n * @param {?} reject\n * @return {?}\n */\nfunction Handler(onFulfilled, onRejected, resolve, reject) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.resolve = resolve;\n    this.reject = reject;\n}\n\n\nDummyPromise.prototype['catch'] = function(onRejected) {\n    return this.then(null, onRejected);\n};\n\nDummyPromise.prototype.then = function(onFulfilled, onRejected) {\n    const /** @type {?} */ me = this;\n    return new DummyPromise(function(resolve, reject) {\n        handle.call(me, new Handler(onFulfilled, onRejected, resolve, reject));\n    });\n};\n\nDummyPromise.prototype.all = function(arrayArg) {\n    var /** @type {?} */ args = Array.prototype.slice.call(arguments.length === 1 && isArray(arrayArg) ? arrayArg : arguments);\n\n    return new DummyPromise(function(resolve, reject) {\n        if (args.length === 0) {\n            return resolve([]);\n        }\n        var /** @type {?} */ remaining = args.length, /** @type {?} */ i;\n/**\n * @param {?} i\n * @param {?} val\n * @return {?}\n */\nfunction res(i, val) {\n            try {\n                if (val && (typeof val === 'object' || typeof val === 'function')) {\n                    var /** @type {?} */ then = val.then;\n                    if (typeof then === 'function') {\n                        then.call(val, function(val) { res(i, val); }, reject);\n                        return;\n                    }\n                }\n                args[i] = val;\n\n                /*jslint plusplus: true */\n                if (--remaining === 0) {\n                    resolve(args);\n                }\n            } catch ( /** @type {?} */ex) {\n                reject(ex);\n            }\n        }\n        /*jslint plusplus: true */         for (i = 0; i < args.length; i++) {\n            res(i, args[i]);\n        }\n    });\n};\n\nDummyPromise.prototype.resolve = function(value) {\n    if (value && typeof value === 'object' && value.constructor === DummyPromise) {\n        return value;\n    }\n\n    return new DummyPromise(function(resolve) {\n        resolve(value);\n    });\n};\n\nDummyPromise.prototype.reject = function(value) {\n    /*jslint unparam: true */\n    return new DummyPromise(function(resolve, reject) {\n        reject(value);\n    });\n};\n\nDummyPromise.prototype.race = function(values) {\n    return new DummyPromise(function(resolve, reject) {\n        var /** @type {?} */ i, /** @type {?} */ len;\n        /*jslint plusplus: true */\n        for (i = 0, len = values.length; i < len; i++) {\n            values[i].then(resolve, reject);\n        }\n    });\n};\n\nDummyPromise.prototype.always = function(onFulfilled) {\n    return this.then(onFulfilled, onFulfilled);\n};\n\nDummyPromise.prototype.done = function(onFulfilled) {\n    return this.then(onFulfilled);\n};\n\nDummyPromise.prototype.fail = function(onRejected) {\n    return this.then(null, onRejected);\n};\n\nDummyPromise.prototype.promise = function() {\n    return this;\n};\n\nDummyPromise.prototype.progress = function() {\n    return this;\n};\n","\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isBoolean(x: any): x is boolean {\r\n    return typeof x === 'boolean';\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isNumber(x: any): x is number {\r\n    return typeof x === 'number';\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isString(x: any): x is string {\r\n    return typeof x === 'string';\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isSymbol(x: any): x is symbol {\r\n    return typeof x === 'symbol';\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isNull(x: any): x is null {\r\n    return x === null;\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isUndefined(x: any): x is undefined {\r\n    return x === undefined;\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isArray(x: any): x is Array<any> {\r\n    return x instanceof Array;\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isObject(x: any): x is Object {\r\n    return typeof x === 'object';\r\n}\n/**\n * @param {?} x\n * @return {?}\n */\nexport function isFunction(x: any): x is Function {\r\n    return typeof x === 'function';\r\n}\r\n\r\nexport interface ITypeDef {\r\n    name: string,\r\n    val: any,\r\n    pred: (any) => boolean\r\n};\r\n\r\nexport const /** @type {?} */ tyBool: ITypeDef = { name: 'Boolean', val: false, pred: isBoolean };\r\nexport const /** @type {?} */ tyNull: ITypeDef = { name: 'Null', val: null, pred: isNull };\r\nexport const /** @type {?} */ tyUndefined: ITypeDef = { name: 'Undefined', val: undefined, pred: isUndefined };\r\nexport const /** @type {?} */ tyNumber: ITypeDef = { name: 'Number', val: 0, pred: isNumber };\r\nexport const /** @type {?} */ tyString: ITypeDef = { name: 'String', val: '', pred: isString };\r\nexport const /** @type {?} */ tySymbol: ITypeDef = { name: 'Symbol', val: null, pred: isSymbol };\r\nexport const /** @type {?} */ tyObject: ITypeDef = { name: 'Object', val: function() { return {}; }, pred: isObject };\r\nexport const /** @type {?} */ tyArray: ITypeDef = { name: 'Array', val: function() { return []; }, pred: isArray };\r\nexport const /** @type {?} */ tyFunction: ITypeDef = { name: 'Function', val: function() { }, pred: isFunction };\n/**\n * @constant - Predefined types and their properties.\n */\nconst preDefinedTypes: { [key: string]: ITypeDef } = {\r\n    tyBool: tyBool,\r\n    tyNull: tyNull,\r\n    tyUndefined: tyUndefined,\r\n    tyNumber: tyNumber,\r\n    tyString: tyString,\r\n    tySymbol: tySymbol,\r\n    tyObject: tyObject,\r\n    tyArray: tyArray,\r\n    tyFunction: tyFunction\r\n};\n/**\n * Returns the default value for a given type.\n * @param {?} ty\n * @return {?}\n */\nexport function defaultValue(ty: ITypeDef): any {\r\n    let /** @type {?} */ val = ty.val;\r\n    if (ty !== tyFunction && typeof val === 'function') {\r\n        val = val();\r\n    }\r\n    return val;\r\n}\n/**\n * Type checks if a given value is type of the given ty\n * @param {?} value\n * @param {?} ty\n * @return {?}\n */\nexport function ok(value: any, ty: ITypeDef): boolean {\r\n    return ty.pred(value);\r\n}\n/**\n * Returns the type for the given value.\n * @param {?} value\n * @return {?}\n */\nexport function getType(value: any): ITypeDef {\r\n    for (let /** @type {?} */ prop in preDefinedTypes) {\r\n        if (ok(value, preDefinedTypes[prop])) {\r\n            return preDefinedTypes[prop];\r\n        }\r\n    }\r\n    return null;\r\n}\n/**\n * \\@function assert\n * @param {?} value\n * @param {?} ty\n * @return {?}\n */\nexport function assert(value: any, ty: ITypeDef): void {\r\n    if (ok(value, ty)) {\r\n        return;\r\n    }\r\n    throw new Error('type check error: exptected type is ' +\r\n        ty + ' but given type is ' + typeof value);\r\n}\r\n","// \r\n// Author:: Tom Tang <principleware@gmail.com>\r\n// Copyright:: Copyright (c) 2017, Tom Tang\r\n// \r\n// Permission is hereby granted, free of charge, to any person obtaining\r\n// a copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to\r\n// permit persons to whom the Software is furnished to do so, subject to\r\n// the following conditions:\r\n// \r\n// The above copyright notice and this permission notice shall be\r\n// included in all copies or substantial portions of the Software.\r\n// \r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n// \r\n// Except as contained in this notice, the name(s) of the above copyright\r\n// holders shall not be used in advertising or otherwise to promote the\r\n// sale, use or other dealings in this Software without prior written\r\n// authorization.\r\n\r\n\r\n\nimport { DummyPromise } from './promise-like';\r\nimport * as typeChecker from '../typing/type-checker';\n/**\n * Lifts a single value or a function into a Promise-like object.\rProvides a method of wrapping a single value or a function  into a Promise,\rin order that the following operation \rmay conform to the standard Promise operation.\rIn some scenario, we may first attempt to get a value from cache.\rMotivation.\rIn this case, we need to return a value. However, if the value is\rnot available in the cache, we may have to go ahead to load it\rasynchronously. Loading a value asynchronously usually returns\ra Promise. To untify the return from two cases, we\rescalate a single value into a Promise.\n * @template T\n * @param {?} value\n * @param {?} thisArg\n * @return {?}\n */\nexport function lift<T>(value: T, thisArg: Object): PromiseLike<T> {\r\n    /*jslint unparam: true */\r\n    return new DummyPromise(function(resolve, reject) {\r\n        if (typeChecker.isFunction(value)) {\r\n            const /** @type {?} */ restArgs = [];\r\n            /*jslint plusplus: true */\r\n            for (let /** @type {?} */ i = 2; i < arguments.length; i++) {\r\n                restArgs.push(arguments[i]);\r\n            }\r\n            const /** @type {?} */ ret = value.apply(thisArg || null, restArgs);\r\n            resolve(ret);\r\n        } else {\r\n            resolve(value);\r\n        }\r\n    });\r\n}\n/**\n * Lifts a value into an rejected state.\n * @template T\n * @param {?} value\n * @return {?}\n */\nexport function liftIntoReject<T>(value: T): PromiseLike<T> {\r\n    return new DummyPromise(function(resolve, reject) {\r\n        /*jslint unparam: true */\r\n        reject(value);\r\n    });\r\n}\n/**\n * Converts a given promise into another promise which ensures that\rthe given guard evalutes to be true from the state of the given promise.\n * @template T\n * @param {?} promise\n * @param {?} guard\n * @return {?}\n */\nexport function liftWithGuard<T>(promise: PromiseLike<T>, guard: (x: T) => boolean): PromiseLike<T> {\r\n    return promise.then(function(data) {\r\n        return new DummyPromise(function(resolve, reject) {\r\n            if (guard(data)) {\r\n                resolve(data);\r\n            } else {\r\n                reject(data);\r\n            }\r\n        });\r\n    });\r\n}\n/**\n * Settles a promise.\n * @template T\n * @param {?} promise\n * @return {?}\n */\nexport function settle<T>(promise: PromiseLike<T>): PromiseLike<T> {\r\n    return new DummyPromise(function(resolve) {\r\n        promise.then(function(value) {\r\n            resolve({\r\n                state: 'fulfilled',\r\n                data: value\r\n            });\r\n        }, function() {\r\n            resolve({\r\n                state: 'rejected'\r\n            });\r\n        });\r\n    });\r\n}\n/**\n * Converts the given promise into a promise which does not reject anything.\n * @template T\n * @param {?} promise\n * @param {?} guard\n * @return {?}\n */\nexport function liftToPredicate<T>(promise: PromiseLike<T>, guard: (x: T) => boolean): PromiseLike<boolean> {\r\n    return new DummyPromise(function(resolve, reject) {\r\n        /*jslint unparam: true */\r\n        promise.then(function(data) {\r\n            resolve(guard(data));\r\n        }, function() {\r\n            resolve(false);\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport interface IPipelineSettings<U> {\r\n    validator?: (x) => boolean,\r\n    adaptor: (x) => U\r\n}\n/**\n * Transforms a given promise with additonal pipeline processing.\rSpecifically, in this method, compared to the given promise, the return\rpromise contains validating and adpating stages.\n * @template T, U\n * @param {?} readerPromise\n * @param {?} settings\n * @return {?}\n */\nexport function readerPipeline<T, U>(readerPromise: PromiseLike<T>, settings: IPipelineSettings<U>) {\r\n    return readerPromise\r\n        .then(function(data) {\r\n            if (settings.validator) {\r\n                if (!settings.validator(data)) {\r\n                    throw new Error('Data is not valid: ' + data);\r\n                }\r\n            }\r\n            return data;\r\n        })\r\n        .then(function(data) {\r\n            return settings.adaptor(data);\r\n        });\r\n}\n/**\n * Transforms a given promise into one promise with our own implementation.\n * @template T\n * @param {?} promise\n * @return {?}\n */\nexport function transform<T>(promise: PromiseLike<T>): PromiseLike<T> {\r\n    return new DummyPromise(function(resolve, reject) {\r\n        promise.then(resolve, reject);\r\n    });\r\n}\r\n","\n/**\n * Pushs an array or a single value into the thisArg;\n * @template T\n * @param {?} thisArg\n * @param {?} src\n * @return {?}\n */\nexport function pushArray<T>(thisArg: Array<T>, src: Array<T> | T): void {\r\n    if (!(src instanceof Array)) {\r\n        thisArg.push(src);\r\n        return;\r\n    }\r\n\r\n    src.forEach(function(item) {\r\n        thisArg.push(item);\r\n    });\r\n}\n/**\n * Turns the values in an object into an array\n * @param {?} o\n * @return {?}\n */\nexport function makeArray(o: Object) {\r\n    const /** @type {?} */ ret = [];\r\n    for (let /** @type {?} */ n in o) {\r\n        if (o.hasOwnProperty(n)) {\r\n            ret.push(o[n]);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","\n/**\n * Generates a guid.\n * @return {?}\n */\nexport function guid() {\r\n    let /** @type {?} */ d = new Date().getTime();\r\n    const /** @type {?} */ uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        const /** @type {?} */ r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\n/**\n * Generates a random number between the given range\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nexport function getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","\n/**\n * Replaces the placeholders a given format with the given parameters.\n * @param {?} format\n * @param {?} params\n * @return {?}\n */\nexport function replace(format: string, params: { [key: string]: any }): string {\r\n    /*jslint unparam: true */\r\n    return format.replace(/\\{([a-zA-Z]+)\\}/g, function(s, key) {\r\n        return (typeof params[key] === 'undefined') ? '' : params[key];\r\n    });\r\n}\n/**\n * Transforms the given string into one where\rsome characters have been properly replaced with\rtheir escape versions.\n * @param {?} data\n * @return {?}\n */\nexport function applyEscape(data: string): string {\r\n    data = data\r\n        .replace(/[\\\\]/g, '\\\\\\\\')\r\n        .replace(/[\\\"]/g, '\\\\\\\"')\r\n        .replace(/[\\/]/g, '\\\\/')\r\n        .replace(/[\\b]/g, '\\\\b')\r\n        .replace(/[\\f]/g, '\\\\f')\r\n        .replace(/[\\n]/g, '\\\\n')\r\n        .replace(/[\\r]/g, '\\\\r')\r\n        .replace(/[\\t]/g, '\\\\t');\r\n    return data;\r\n}\n/**\n * Undo the work by applyEscape. It replaces the escape\rcharacters with their unescaped ones.\n * @param {?} data\n * @return {?}\n */\nexport function reverseEscape(data: string): string {\r\n    data = data\r\n        .replace(/\\\\\\\\/g, '\\\\')\r\n        .replace(/\\\\\\\"/g, '\\\"')\r\n        .replace(/\\\\\\//g, '\\/')\r\n        .replace(/\\\\\\b/g, '\\b')\r\n        .replace(/\\\\\\f/g, '\\f')\r\n        .replace(/\\\\\\n/g, '\\n')\r\n        .replace(/\\\\\\r/g, '\\r')\r\n        .replace(/\\\\\\t/g, '\\t');\r\n    return data;\r\n}\r\n","\n/**\n * Encodes a key-value pair, where a value can be an array.\n * @param {?} key\n * @param {?} value\n * @param {?} str\n * @return {?}\n */\nexport function urlEncodePair(key: string, value: any, str: Array<string>): void {\r\n    if (value instanceof Array) {\r\n        value.forEach((item) => {\r\n            str.push(encodeURIComponent(key) + '[]=' + encodeURIComponent(item));\r\n        });\r\n    } else {\r\n        str.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n    }\r\n}\n/**\n * Encodes an object in www form.\n * @param {?} data\n * @return {?}\n */\nexport function urlEncode(data: Object): string {\r\n    const /** @type {?} */ str: Array<string> = [];\r\n    for (let /** @type {?} */ p in data) {\r\n        if (data.hasOwnProperty(p)) {\r\n            urlEncodePair(p, data[p], str);\r\n        }\r\n    }\r\n    return str.join('&').replace(/%20/g, '+');\r\n}\n/**\n * @param {?} name\n * @param {?} url\n * @return {?}\n */\nexport function getParamByName(name: string, url: string): string | null {\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    const /** @type {?} */ regex = new RegExp('[?#&]' + name + '(=([^&#]*)|&|#|$)');\r\n    const /** @type {?} */ results = regex.exec(url);\r\n    if (!results) {\r\n        return null;\r\n    }\r\n    if (!results[2]) {\r\n        return '';\r\n    }\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\n/**\n * @param {?} name\n * @param {?=} url\n * @return {?}\n */\nexport function getQueryParamByName(name: string, url?: string): string | null {\r\n    if (!url) {\r\n        url = window.location.href;\r\n    }\r\n    return getParamByName(name, url);\r\n}\n/**\n * @param {?} name\n * @param {?=} url\n * @return {?}\n */\nexport function getHashParamByName(name: string, url?: string): string | null {\r\n    if (!url) {\r\n        url = window.location.hash;\r\n    }\r\n    return getParamByName(name, url);\r\n}\r\n","import * as typeChecker from './type-checker';\n/**\n * Parses a given value into an integer.\n * @param {?} value\n * @return {?}\n */\nexport function safeParseInt(value: any): number {\r\n    if (!value) {\r\n        return 0;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyString)) {\r\n        return parseInt(value, 10);\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyNumber)) {\r\n        return value;\r\n    }\r\n    return 0;\r\n}\n/**\n * Parses a given value into a float number.\n * @param {?} value\n * @return {?}\n */\nexport function safeParseFloat(value: any): number {\r\n    if (!value) {\r\n        return 0.00;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyString)) {\r\n        return parseFloat(value);\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyNumber)) {\r\n        return value;\r\n    }\r\n    return 0.00;\r\n}\n/**\n * Parses a given value into a bool value.\n * @param {?} value\n * @return {?}\n */\nexport function safeParseBool(value: any): boolean {\r\n    if (!value) {\r\n        return false;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyBool)) {\r\n        return value;\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyString)) {\r\n        return value.toLowerCase() === 'true';\r\n    }\r\n    if (typeChecker.ok(value, typeChecker.tyNumber)) {\r\n        return value > 0;\r\n    }\r\n    return false;\r\n}\n/**\n * Returns if a given value can be safely converted into the given type.\n * @param {?} value\n * @param {?} ty\n * @return {?}\n */\nexport function convertible(value: any, ty: typeChecker.ITypeDef): boolean {\r\n    if (typeChecker.ok(value, ty)) {\r\n        return true;\r\n    }\r\n\r\n    if (typeChecker.isNull(value) || typeChecker.isUndefined(value)) {\r\n        return false;\r\n    }\r\n\r\n    if (ty === typeChecker.tyNumber && isNaN(value)) {\r\n        return false;\r\n    }\r\n\r\n    // TODO: refine\r\n    return true;\r\n}\n/**\n * Safely converts the given value into a value of the given type.\n * @param {?} value\n * @param {?} ty\n * @return {?}\n */\nexport function convert(value: any, ty: typeChecker.ITypeDef): any {\r\n    if (ty === typeChecker.tyNumber) {\r\n        return safeParseFloat(value);\r\n    }\r\n    if (ty === typeChecker.tyBool) {\r\n        return safeParseBool(value);\r\n    }\r\n    if (ty === typeChecker.tyString) {\r\n        return value.toString();\r\n    }\r\n\r\n    throw new Error('Cannot convert the given value to the given type');\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {tojQueryDeferred,lift,liftIntoReject,liftWithGuard,settle,liftToPredicate,IPipelineSettings,readerPipeline,transform,DummyPromise,pushArray,makeArray,guid,getRandomInt,replace,applyEscape,reverseEscape,urlEncodePair,urlEncode,getParamByName,getQueryParamByName,getHashParamByName,safeParseInt,safeParseFloat,safeParseBool,convertible,convert,isBoolean,isNumber,isString,isSymbol,isNull,isUndefined,isArray,isObject,isFunction,ITypeDef,tyBool,tyNull,tyUndefined,tyNumber,tyString,tySymbol,tyObject,tyArray,tyFunction,defaultValue,ok,getType,assert} from './index';\n","/**\n * @fileOverview\n * Defines a Sqlite databse\n * @name SqliteDatabase.js\n * @module hypercom/storage/SqliteDatabase\n * @author Xiaolong Tang <xxlongtang@gmail.com>\n * @license Copyright @me\n */\n\n\nimport {\n    SQLite,\n    SQLiteDatabaseConfig,\n    SQLiteObject,\n    SQLiteTransaction\n} from '@ionic-native/sqlite/index';\nimport { replace, lift, makeArray } from 'principleware-fe-utilities/dist';\nimport { IDevicePlatform } from '../platform/interfaces';\n\nimport { ITableSchema, ISqliteDatabase } from './interfaces';\n\nconst /** @type {?} */ workingDbs: {\n    [key: string]: {\n        database: SQLiteObject,\n        referenceCounter: number\n    }\n} = {};\n/**\n * @param {?} name\n * @param {?} platform\n * @return {?}\n */\nfunction makeOptions(name: string, platform: IDevicePlatform): SQLiteDatabaseConfig {\n    const /** @type {?} */ options = { name: name };\n    if (platform.ios) {\n        options['iosDatabaseLocation'] = 'default';\n    } else if (platform.android) {\n        options['location'] = 'default';\n    }\n    return options;\n}\nexport class SqliteDatabase implements ISqliteDatabase {\n/**\n * @param {?} sqlite\n * @param {?} dbName\n * @param {?} dbSchema\n * @param {?} platform\n */\nconstructor(private sqlite: SQLite,\nprivate dbName: string,\nprivate dbSchema: { [key: string]: ITableSchema },\nprivate platform: IDevicePlatform) {\n    }\n/**\n * Inits a database.\n * @return {?}\n */\ninitDBPromise(): PromiseLike<any> {\n        const /** @type {?} */ cache = workingDbs[this.dbName];\n\n        if (cache) {\n            cache.referenceCounter = cache.referenceCounter + 1;\n            return lift(cache.database, null);\n        }\n\n        const /** @type {?} */ options = makeOptions(this.dbName, this.platform);\n        return this.sqlite.create(options)\n            .then(db => {\n\n                const /** @type {?} */ tables = [];\n                for (let /** @type {?} */ k in this.dbSchema) {\n                    if (this.dbSchema.hasOwnProperty(k)) {\n                        const /** @type {?} */ v = this.dbSchema[k];\n                        tables.push(v.create);\n                    }\n                }\n\n                const /** @type {?} */ promises = tables.map((elem) => {\n                    return db.executeSql(elem, {});\n                });\n\n                return Promise.all(promises)\n                    .then(() => {\n                        workingDbs[this.dbName] = {\n                            referenceCounter: 1,\n                            database: db\n                        };\n\n                        return db;\n                    });\n            })\n            .catch(e => console.log(e));\n    }\n/**\n * @return {?}\n */\ndeleteDBPromise(): PromiseLike<any> {\n        let /** @type {?} */ cache = workingDbs[this.dbName];\n\n        if (cache) {\n            throw new Error('Still in use, please close first');\n        }\n\n        const /** @type {?} */ options = makeOptions(this.dbName, this.platform);\n\n        return this.sqlite.deleteDatabase(options);\n    }\n/**\n * Closes the database.\n * @return {?}\n */\ncloseDBPromise(): PromiseLike<any> {\n\n        const /** @type {?} */ cache = workingDbs[this.dbName];\n\n        if (!cache) {\n            return lift(true, null);\n        }\n\n        cache.referenceCounter = cache.referenceCounter - 1;\n        if (cache.referenceCounter > 0) {\n            return lift(true, null);\n        }\n\n        return cache.database.close();\n    }\n/**\n * Inserts data into the given table.\n * @param {?} table\n * @param {?} data\n * @return {?}\n */\ninsertPromise(table: string, data: any): PromiseLike<number> {\n\n        const /** @type {?} */ schema = this.dbSchema[table];\n        const /** @type {?} */ cache = workingDbs[this.dbName];\n\n        if (!cache || !schema) {\n            throw new Error('No database instance');\n        }\n\n        return cache.database.executeSql(schema.insert, data)\n            .then((result) => {\n                return result;\n            })\n            .catch((e) => {\n                console.log(e);\n                return 0;\n            });\n    }\n/**\n * Selects from the given table.\n * @param {?} table\n * @param {?=} selectSql\n * @return {?}\n */\nselectPromise(table: string, selectSql?: string): PromiseLike<any[]> {\n\n        const /** @type {?} */ schema = this.dbSchema[table];\n        const /** @type {?} */ cache = workingDbs[this.dbName];\n\n        if (!cache || !schema) {\n            throw new Error('No database instance');\n        }\n\n        return cache.database.executeSql(selectSql || schema.select, {})\n            .then((result) => {\n                const /** @type {?} */ records = [];\n                for (let /** @type {?} */ i = 0; i < result.rows.length; i++) {\n                    records.push(result.rows.item(i));\n                }\n                return records;\n            })\n            .catch((e) => {\n                console.log(e);\n                return [];\n            });\n    }\n/**\n * Deletes records with the given id or range\n * @param {?} table\n * @param {?} id\n * @param {?=} lastId\n * @return {?}\n */\ndeletePromise(table: string, id: number, lastId?: number): PromiseLike<any> {\n\n        const /** @type {?} */ schema = this.dbSchema[table];\n        const /** @type {?} */ cache = workingDbs[this.dbName];\n\n        if (!cache || !schema) {\n            throw new Error('No database instance');\n        }\n\n        let /** @type {?} */ where = '';\n        if (lastId) {\n            where = 'WHERE id > ' + id + ' AND id < ' + lastId;\n        } else {\n            where = id === 0 ? 'WHERE id > 0' : 'WHERE id=' + id;\n        }\n\n        const /** @type {?} */ stmt = replace(schema.remove, { where: where });\n\n        return cache.database.executeSql(stmt, {});\n    }\n/**\n * Deletes records with the given where condition\n * @param {?} table\n * @param {?} where\n * @return {?}\n */\ndeleteWherePromise(table: string, where: string): PromiseLike<any> {\n\n        const /** @type {?} */ schema = this.dbSchema[table];\n        const /** @type {?} */ cache = workingDbs[this.dbName];\n\n        if (!cache || !schema) {\n            throw new Error('No database instance');\n        }\n\n        const /** @type {?} */ stmt = replace(schema.remove, { where: where });\n\n        return cache.database.executeSql(stmt, {});\n    }\n/**\n * Updates the given with the given value.\n * @param {?} table\n * @param {?} value\n * @param {?=} where\n * @return {?}\n */\nupdatePromise(table: string, value: any, where: string = ''): PromiseLike<any> {\n\n        const /** @type {?} */ schema = this.dbSchema[table];\n        const /** @type {?} */ cache = workingDbs[this.dbName];\n\n        if (!cache || !schema) {\n            throw new Error('No database instance');\n        }\n\n        const /** @type {?} */ stmt = 'UPDATE ' + table + ' SET ' + value + ' ' + where;\n\n        return cache.database.executeSql(stmt, {});\n    }\n}\n\nfunction SqliteDatabase_tsickle_Closure_declarations() {\n/** @type {?} */\nSqliteDatabase.prototype.sqlite;\n/** @type {?} */\nSqliteDatabase.prototype.dbName;\n/** @type {?} */\nSqliteDatabase.prototype.dbSchema;\n/** @type {?} */\nSqliteDatabase.prototype.platform;\n}\n\n","/**\n * @fileOverview\n * Defines a class for representing the key-pair table.\n */\n\n\nimport { lift as liftIntoPromise } from 'principleware-fe-utilities/dist';\n\nimport { SqliteDatabase } from './sqlite-database';\n\nimport { IMapKeyConfiguration, ISqliteDatabase } from './interfaces';\n\nexport interface IKeyCache {\n    get(k: string): any;\n    set(k: string, v: any, liveSession: number);\n    reset(): void;\n}\n\nexport interface IMapRecord {\n    key: string;\n    value: any;\n    id: number;\n}\n\nconst /** @type {?} */ DefaultLiveSession = 2 * 60;\n/**\n * \\@class KeyPairTable\n */\nexport class MapTable {\n/**\n * @param {?} tableName\n * @param {?} configuration\n * @param {?} database\n * @param {?} _cache\n */\nconstructor(protected tableName: string,\n        protected configuration: { [key: string]: IMapKeyConfiguration },\n        protected database: ISqliteDatabase,\nprivate _cache: IKeyCache) { }\n/**\n * Inserts the given value for the given key.\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\ninsertP(key: string, value: any): PromiseLike<IMapRecord> {\n        // parse into value \n        value = this.configuration[key].parser.call(null, value);\n        const /** @type {?} */ ret = this.database.insertPromise(this.tableName, [key, value]);\n        return ret.then(function(insertId) {\n            const /** @type {?} */ record = {\n                key: key,\n                value: value,\n                id: insertId\n            };\n            if (this.cache) {\n                const /** @type {?} */ cacheKey = this.configuration[key].cacheKey;\n                this._cache.set(cacheKey, record, DefaultLiveSession);\n            }\n            return record;\n        });\n    }\n/**\n * Updtes the given reocrd; the record value has been updated.\n * @param {?} record\n * @param {?} newValue\n * @return {?}\n */\nupdateP(record: IMapRecord, newValue: any): PromiseLike<IMapRecord> {\n\n        newValue = this.configuration[record.key].parser.call(null, newValue);\n\n        if (record.id === 0) {\n            return this.insertP(record.key, newValue);\n        }\n\n        const /** @type {?} */ ret = this.database.updatePromise(this.tableName, 'value = ' +\n            (typeof newValue === 'string' ? '\"' + newValue + '\"' : newValue),\n            'WHERE id = ' + record.id);\n\n        return ret.then(function() {\n            if (this._cache) {\n                const /** @type {?} */ cacheKey = this.configuration[record.key].cacheKey;\n                record.value = newValue;\n                this._cache.set(cacheKey, record, DefaultLiveSession);\n            }\n            return record;\n        });\n    }\n/**\n * Returns the infomation about the given key.\n * @param {?} key\n * @return {?}\n */\ngetP(key: string): PromiseLike<IMapRecord> {\n\n        if (this._cache) {\n            const /** @type {?} */ cachedItem = this._cache.get(this.configuration[key].cacheKey);\n            if (cachedItem) {\n                return liftIntoPromise(cachedItem, null);\n            }\n        }\n\n        const /** @type {?} */ stmt = 'SELECT * FROM ' + this.tableName + ' WHERE key like \"' + key + '\"';\n        const /** @type {?} */ ret = this.database.selectPromise(this.tableName, stmt);\n\n        return ret.then(function(records) {\n            let /** @type {?} */ record: IMapRecord;\n            if (records.length > 0) {\n                record = {\n                    key: key,\n                    value: records[0],\n                    id: records[0].id\n                }\n                if (this.configuration[key].reader) {\n                    record.value = this.configuration[key].reader.call(null, record.value);\n                }\n            } else {\n                record = {\n                    key: key,\n                    value: this.configuration[key].defaultValue,\n                    id: 0\n                };\n            }\n            if (this._cache) {\n                const /** @type {?} */ cacheKey = this.configuration[key].cacheKey;\n                this._cache.set(cacheKey, record, DefaultLiveSession);\n            }\n            return record;\n        });\n    }\n/**\n * Cleans all database record.\n * @return {?}\n */\nresetP(): PromiseLike<any> {\n        // clean all cache first\n        if (this._cache) {\n            this._cache.reset();\n        }\n        return this.database.deletePromise(this.tableName, 0);\n    }\n}\n\nfunction MapTable_tsickle_Closure_declarations() {\n/** @type {?} */\nMapTable.prototype.tableName;\n/** @type {?} */\nMapTable.prototype.configuration;\n/** @type {?} */\nMapTable.prototype.database;\n/** @type {?} */\nMapTable.prototype._cache;\n}\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {SqliteDatabase,IKeyCache,IMapRecord,MapTable} from './index';\n\nexport {IDevicePlatform as ɵa} from './src/platform/interfaces';\nexport {ISqliteDatabase as ɵb} from './src/storage/interfaces';"],"names":["typeChecker.isFunction","liftIntoPromise"],"mappings":"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"}